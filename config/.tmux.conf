# use 256 color
setw -g xterm-keys on
set -g default-terminal "screen-256color"

# remap prefix key
set -g prefix C-f

# bind C-f C-f to send C-f
unbind-key C-b
bind C-f send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# quick pane cycling
set -g mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# act like vim - requires ctrl+F+(h|j|k|l) to switch panes
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# clock
set-window-option -g clock-mode-colour green #green

# start window numbering at 1 for easier switching
set -g base-index 1

# Clear the current pane AND clear the pane's history
bind-key e send-keys "clear" \; send-keys "Enter"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# set pane colors - hilight the active pane
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour33
set-option -g pane-active-border-fg colour240

# colorize messages in the command line
set-option -g message-bg black
set-option -g message-fg brightred

# ----------------------
# Status Bar
# -----------------------

# set update frequencey (default 15 seconds)
set -g status-interval 5

# center window list for clarity
set -g status-justify centre
set -g status-left-length 500
set -g status-right-length 500

# show host name and IP address on left side of status bar
set -g status-left "#[fg=green] #h | #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en1 | grep 'inet ' | awk '{print \"en0 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') #[fg=green]#(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk -F': ' '/ SSID/{print $2}') | #S #[fg=green,bg=black]#(tmux-mem-cpu-load --colors --interval 2)#[default]"

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right "#[fg=cyan]#{=15:pane_title} | #[fg=blue]#S #I:#P #[fg=yellow]| %d %b %Y #[fg=green]| %H:%M (EST) | #(date -u | awk '{print $4}') (UTC) | #[fg=green]#{battery_percentage} "

# Be as large as you can be
setw -g aggressive-resize on

# Fix tmux copy bug
set-option -g default-command "reattach-to-user-namespace -l zsh"

# change the escape time in tmux to zero
set-option -sg escape-time 0

set -g status-position bottom
set -g pane-border-fg colour237
set -g pane-active-border-fg colour237

# show the tmux status bar
set -g status on

# auto rename windows
set -g automatic-rename on

# use a large scrollback history
set-option -g history-limit 10000

# Colorize the messages in the command
set-option -g message-bg colour235
set-option -g message-fg red

# Sane colors for a light background
set -g status-bg black
set -g status-fg colour1
set-window-option -g window-status-current-fg colour15

# https://superuser.com/questions/834525/unable-to-launch-application-in-tmux
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key S run-shell "tmux rename-session $(basename $(pwd))"

# set -sg escape-time 0
set -g escape-time 10

# use old behavior for splits and new windows
unbind '"'
bind-key '"' split-window -c "#{pane_current_path}"
unbind '%'
bind-key '%' split-window -h -c "#{pane_current_path}"
unbind 'c'
bind-key 'c' new-window -c "#{pane_current_path}"

# List of plugins - supports `github_username/repo` or full git URLs
set -g @tpm_plugins " \
  tmux-plugins/tpm \
  tmux-plugins/tmux-battery \
  tmux-plugins/tmux-resurrect \
  tmux-plugins/tmux-sessionist \
"

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

# copy to clipboard buffer
#bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# resize panes like vim
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
